#+PROPERTY: header-args:scheme :results silent :noweb yes

#+NAME: cuw.scm
#+BEGIN_SRC scheme :tangle cuw.scm
<<top>>
#+END_SRC

#+NAME: top
#+BEGIN_SRC scheme
(define (cuw)
  (regset (sqlite-open smpdb) 0)
  (wt1-arps (reggetf 0))
  (buthp zz 1000)
  (mul zz (ampdb -3))
  (critters)
  (mul zz (ampdb -5))
  (bdup)
  (jcrev zz)
  (add zz zz)
  (add zz zz)

  (wt4-osc3 (reggetf 0) (lambda () (dmetro 20)) (paramf (+ 37 0)))
  (mul zz (ampdb -3))
  (butlp zz 300)
  (add zz zz))
#+END_SRC

#+BEGIN_SRC scheme
(define (run)
  (regset (sqlite-open smpdb) 0)
  (wt1-arps (reggetf 0))
  (buthp zz 1000)
  (mul zz (ampdb -3))
  (critters)
  (mul zz (ampdb -5))
  (bdup)
  (jcrev zz)
  (add zz zz)
  (add zz zz)

  (wt4-osc3 (reggetf 0) (lambda () (dmetro 20)) (paramf (+ 37 0)))
  (mul zz (ampdb -3))
  (butlp zz 300)
  (add zz zz)

  (out zz))
#+END_SRC


#+BEGIN_SRC scheme
(monolith:start)
(monolith:load "ugens.scm")
#+END_SRC

#+BEGIN_SRC scheme
;(monolith:append-path (sys:getenv "CODEX_PATH"))
(monolith:load "frags/wt1.scm")
#+END_SRC

#+BEGIN_SRC scheme
(monolith:load "frags/critters.scm")
#+END_SRC

#+BEGIN_SRC scheme
(monolith:load "wtutil.scm")
#+END_SRC

#+BEGIN_SRC scheme
(monolith:load "wt4.scm")
#+END_SRC
